{"version":3,"file":"static/js/736.cd48dd22.chunk.js","mappings":"0QAEaA,E,OAAWC,GAAAA,GAAH,iE,kBCMN,SAASC,IAAQ,IAAD,EAC7B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACE,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBV,OAlBEE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAS,mCAAG,WAAOH,GAAP,8EAClBH,GAAa,GADK,kBAGKO,EAAAA,GAAsBJ,GAH3B,OAGZK,EAHY,OAIlBN,EAAQM,GAJU,gDAMlBV,EAAS,EAAD,IANU,yBAQhBE,GAAa,GARG,4EAAH,sDAYjBM,EAAUH,EAbY,CAerB,GAAE,CAACA,KAGJ,2BACOJ,IAAa,SAACU,EAAA,EAAD,IACbZ,IAAS,qCAAaA,EAAMa,YAC7B,+BACKT,QADL,IACKA,GADL,UACKA,EAAMU,YADX,aACK,EAAYC,KAAI,SAAAC,GAAK,OAAI,UAACpB,EAAD,YACtB,wBAAKoB,EAAMC,QACX,gBAAKC,IAAKF,EAAMG,aAAN,yCAAuDH,EAAMG,cAAiBC,EAAeC,IAAKL,EAAMC,QAClH,uBAAKD,EAAMM,cAH0BN,EAAMO,GAAzB,QAQnC,C,8LC3CKC,EAAO,mCAEAC,EAAc,mCAAG,6FACpBC,EAAS,CACXC,IAAK,kDACLC,OAAQ,CACJC,QAASL,IAJS,UAOHM,EAAAA,EAAAA,GAAMJ,GAPH,cAOpBf,EAPoB,yBAQnBA,EAASP,MARU,2CAAH,qDAWd2B,EAAa,mCAAG,WAAOd,GAAP,8FAAae,EAAb,+BAAoB,EACvCN,EAAS,CACXC,IAAK,4CACLC,OAAQ,CACJC,QAASL,EACTS,SAAU,QACVD,KAAMA,EACNE,MAAOjB,IAPU,UAUFa,EAAAA,EAAAA,GAAMJ,GAVJ,cAUnBf,EAVmB,yBAWlBA,EAASP,MAXS,2CAAH,sDAcb+B,EAAS,mCAAG,WAAOC,GAAP,gFACfV,EAAS,CACXC,IAAI,sCAAD,OAAwCS,GAC3CR,OAAQ,CACJC,QAASL,EACTS,SAAU,UALG,UAQEH,EAAAA,EAAAA,GAAMJ,GARR,cAQff,EARe,yBASdA,EAASP,MATK,2CAAH,sDAYTiC,EAAY,mCAAG,WAAOD,GAAP,gFAClBV,EAAS,CACXC,IAAI,sCAAD,OAAwCS,EAAxC,YACHR,OAAQ,CACJC,QAASL,EACTS,SAAU,UALM,UAQDH,EAAAA,EAAAA,GAAMJ,GARL,cAQlBf,EARkB,yBASjBA,EAASP,MATQ,2CAAH,sDAYZkC,EAAY,mCAAG,WAAOF,GAAP,gFAClBV,EAAS,CACXC,IAAI,sCAAD,OAAwCS,EAAxC,YACHR,OAAQ,CACJC,QAASL,EACTS,SAAU,QACVD,KAAM,IANU,UASDF,EAAAA,EAAAA,GAAMJ,GATL,cASlBf,EATkB,yBAUjBA,EAASP,MAVQ,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviedbAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n    img {\n        width: 200px;\n    }\n`","import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as MovieAPI from '../../services/moviedbAPI';\n\nimport Loader from 'components/Loader/Loader';\nimport { CastItem } from './Cast.styled';\nimport DefaultAvatar from '../../images/default-avatar.jpg';\n\nexport default function Cast() {\n  const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n      if (!movieId) return;\n      const fetchCast = async (movieId) => {\n      setIsLoading(true);\n      try {\n      const response = await MovieAPI.movieCredits(movieId);\n      setData(response);\n    } catch (e) {\n      setError(e);\n    } finally {\n        setIsLoading(false);\n    }\n    }\n    \n    fetchCast(movieId);\n\n    }, [movieId]);\n\n  return (\n    <div>\n          {isLoading && <Loader />}\n          {error && <div>Error: {error.message}</div>}\n          <ul>\n              {data?.cast?.map(actor => <CastItem key={actor.id}>\n                  <h4>{actor.name}</h4>\n                  <img src={actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : DefaultAvatar} alt={actor.name} />\n                  <p>{ actor.character }</p>\n              </CastItem>)}\n          </ul>\n    </div>\n  )\n}\n","import axios from 'axios';\n\nconst API_KEY = `8dee51c91a52c88890f609d5b0af0b1a`;\n\nexport const trendingMovies = async () => {\n    const config = {\n        url: 'https://api.themoviedb.org/3/trending/movie/day',\n        params: {\n            api_key: API_KEY,\n        }\n}\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const moviesByQuery = async (name, page = 1) => {\n    const config = {\n        url: 'https://api.themoviedb.org/3/search/movie',\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: page,\n            query: name\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieById = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieCredits = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/credits`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieReviews = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/reviews`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: 1,\n        }\n    }\n    const response = await axios(config);\n    return response.data; \n};"],"names":["CastItem","styled","Cast","useState","error","setError","isLoading","setIsLoading","data","setData","movieId","useParams","useEffect","fetchCast","MovieAPI","response","Loader","message","cast","map","actor","name","src","profile_path","DefaultAvatar","alt","character","id","API_KEY","trendingMovies","config","url","params","api_key","axios","moviesByQuery","page","language","query","movieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}