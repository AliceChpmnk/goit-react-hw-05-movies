{"version":3,"file":"static/js/478.7239fd38.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","hooks/useAxios.jsx","components/Search/SearchForm.jsx","pages/Movies.jsx","services/moviedbConfigs.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieItem = styled(NavLink)`\n  \n`;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledMovieItem } from './MovieItem.styled';\n\nexport default function MovieItem({ name, id }) {\n    const location = useLocation();\n    return (\n        <li>\n            <StyledMovieItem key={id} to={`/movies/${id}`} state={{from: location}}>{name}</StyledMovieItem>\n      </li>\n  )\n}\n\nMovieItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n}\n","import styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Loader from 'components/Loader/Loader';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport { StyledMovieList } from './MoviesList.styled';\n\nexport default function MoviesList({ movies = [], isLoading = false, error = '' }) {\n\n    return (\n        <>\n            <StyledMovieList>\n                {movies?.length > 0 && movies.map(item => <MovieItem key={item.id} id={item.id} name={item.name ?? item.title} />)}\n            </StyledMovieList>\n            {isLoading && <Loader />}\n            {error && <div>Error: {error.message}</div>}\n      </>\n  )\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.array,\n    isLoading: PropTypes.bool,\n    error: PropTypes.string,\n}\n","import { useCallback, useState } from 'react';\nimport axios from 'axios';\n\nexport const useAxios = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n\n  const fetchData = useCallback(async (config) => {\n    setIsLoading(true);\n    try {\n      const response = await axios(config);\n      setData(response.data);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return { isLoading, data, error, fetchData };\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function SearchForm({ onSubmit }) {\n    const [query, setQuery] = useState('');\n\n    const handleQueryChange = e => {\n        setQuery(e.currentTarget.value.toLowerCase());\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        \n    if (query.trim() === '') {\n      alert('Please enter the name of the movie');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n    };\n\n  return (\n    <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"Search movies\" value={query} onChange={ handleQueryChange } />\n          <button type=\"submit\">Search</button>\n    </form>\n  )\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n","import React, { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { useAxios } from 'hooks/useAxios';\nimport * as Configs from '../services/moviedbConfigs';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/Search/SearchForm';\n\nfunction Movies() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const { isLoading, data, error, fetchData } = useAxios();\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        if (!query) return;\n        fetchData(Configs.moviesByQuery(query));\n    }, [query, fetchData]);\n\n    const handleFormSubmit = (name) => {\n        setSearchParams({ query: name });\n    }\n        \n    const movies = data?.results;\n\n  return (\n      <>\n          <SearchForm onSubmit={handleFormSubmit} />\n          {movies && <MoviesList error={error} isLoading={isLoading} movies={movies}/>}\n      </>\n  )\n}\n\nexport default Movies;\n","const API_KEY = `8dee51c91a52c88890f609d5b0af0b1a`;\n\nexport const trendingMovies = () => {\n    return {\n        url: 'https://api.themoviedb.org/3/trending/movie/day',\n        params: {\n            api_key: API_KEY,\n        }\n}};\n\nexport const moviesByQuery = (name, page=1) => {\n    return {\n        url: 'https://api.themoviedb.org/3/search/movie',\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: page,\n            query: name\n        }\n    }\n};\n\nexport const movieById = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n};\n\nexport const movieCredits = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/credits`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n};\n\nexport const movieReviews = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/reviews`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: 1,\n        }\n    }\n};"],"names":["StyledMovieItem","styled","NavLink","MovieItem","name","id","location","useLocation","to","state","from","StyledMovieList","MoviesList","movies","isLoading","error","length","map","item","title","Loader","message","useAxios","useState","setIsLoading","data","setData","setError","fetchData","useCallback","config","axios","response","SearchForm","onSubmit","query","setQuery","e","preventDefault","trim","alert","type","placeholder","value","onChange","currentTarget","toLowerCase","useSearchParams","searchParams","setSearchParams","get","useEffect","Configs","results","API_KEY","trendingMovies","url","params","api_key","moviesByQuery","page","language","movieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}