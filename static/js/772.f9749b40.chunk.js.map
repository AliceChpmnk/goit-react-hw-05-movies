{"version":3,"file":"static/js/772.f9749b40.chunk.js","mappings":"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","sources":["hooks/useAxios.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/StyledNavLink/StyledNavLink.jsx","components/BackButton/BackButton.styled.jsx","components/BackButton/BackButton.jsx","pages/MoviePage.jsx","services/moviedbConfigs.jsx"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport axios from 'axios';\n\nexport const useAxios = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n\n  const fetchData = useCallback(async (config) => {\n    setIsLoading(true);\n    try {\n      const response = await axios(config);\n      setData(response.data);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return { isLoading, data, error, fetchData };\n};","import styled from 'styled-components';\n\nexport const StyledMovieCard = styled.div`\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n`","import React from 'react';\nimport { StyledMovieCard } from './MovieCard.styled';\n\nexport default function MovieCard({data}) {\n    return (\n      <StyledMovieCard>\n            <div>\n                  <img src={`https://image.tmdb.org/t/p/w400${data.poster_path}`} alt={data.name ?? data.title} />\n              </div>\n              <div>\n                  <h1>{data.name ?? data.title}</h1>\n                  <p>User Score: { data.vote_average}</p>\n                  <h2>Overview</h2>\n                  <p>{ data.overview }</p>\n                  {data.genres?.length > 0 && <>\n                      <h2>Genres</h2>\n                      <p>{data.genres.map(genre => genre.name).join(', ')}</p>\n                  </>}\n            </div>\n        </StyledMovieCard>\n  )\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinksContainer = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const StyledNavLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: #BC4749;\n  }\n`;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledBackButton = styled(Link)`\n    display: inline-block;\n    padding: 10px;\n    margin-bottom: 20px;\n    text-decoration: none;\n    border-radius: 5px;\n    background-color: #386641;\n    color: white;\n`","import React from 'react';\n\nimport { StyledBackButton } from './BackButton.styled';\n\nexport default function BackButton({ backLinkHref }) {\n  return (\n    <StyledBackButton to={backLinkHref}>◄ Go back</StyledBackButton>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useAxios } from 'hooks/useAxios';\nimport * as Configs from '../services/moviedbConfigs';\n\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { StyledNavLink, LinksContainer } from 'components/StyledNavLink/StyledNavLink';\nimport BackButton from 'components/BackButton/BackButton';\n\nfunction MoviePage() {\n    const { isLoading, data, error, fetchData } = useAxios();\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n        if (!movieId) return;\n\n        fetchData(Configs.movieById(movieId));\n    }, [movieId, fetchData]);\n\n  return (\n      <>\n          <BackButton backLinkHref={backLinkHref}>◄ Go back</BackButton>\n          {isLoading && <Loader />}\n          {error && <div>Error: {error.message}</div>}\n          {data && <MovieCard data={data} />}\n          <LinksContainer>\n              <h3>Additional Information:</h3>\n              <StyledNavLink to=\"cast\" state={{from: backLinkHref}}>Cast</StyledNavLink>\n              <StyledNavLink to=\"reviews\" state={{from: backLinkHref}}>Reviews</StyledNavLink>\n          </LinksContainer>\n          <Outlet />\n    </>)\n}\n\nexport default MoviePage;","const API_KEY = `8dee51c91a52c88890f609d5b0af0b1a`;\n\nexport const trendingMovies = () => {\n    return {\n        url: 'https://api.themoviedb.org/3/trending/movie/day',\n        params: {\n            api_key: API_KEY,\n        }\n}};\n\nexport const moviesByQuery = (name, page=1) => {\n    return {\n        url: 'https://api.themoviedb.org/3/search/movie',\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: page,\n            query: name\n        }\n    }\n};\n\nexport const movieById = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n};\n\nexport const movieCredits = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/credits`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n};\n\nexport const movieReviews = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/reviews`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: 1,\n        }\n    }\n};"],"names":["useAxios","useState","isLoading","setIsLoading","data","setData","error","setError","fetchData","useCallback","config","axios","response","StyledMovieCard","styled","MovieCard","src","poster_path","alt","name","title","vote_average","overview","genres","length","map","genre","join","LinksContainer","StyledNavLink","NavLink","StyledBackButton","Link","BackButton","backLinkHref","to","movieId","useParams","useLocation","state","from","useEffect","Configs","Loader","message","API_KEY","trendingMovies","url","params","api_key","moviesByQuery","page","language","query","movieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}