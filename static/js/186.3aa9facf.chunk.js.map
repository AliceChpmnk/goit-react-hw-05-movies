{"version":3,"file":"static/js/186.3aa9facf.chunk.js","mappings":"wQAMe,SAASA,IAAW,IAAD,IAChC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACE,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBV,OAlBEE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAY,mCAAG,WAAOH,GAAP,8EACrBH,GAAa,GADQ,kBAGEO,EAAAA,GAAsBJ,GAHxB,OAGfK,EAHe,OAIrBN,EAAQM,GAJa,gDAMrBV,EAAS,EAAD,IANa,yBAQnBE,GAAa,GARM,4EAAH,sDAYpBM,EAAaH,EAbS,CAerB,GAAE,CAACA,KAGF,2BACKJ,IAAa,SAAC,IAAD,IACfF,IAAS,qCAAaA,EAAMY,YAC3B,0BAC6B,KAAtB,OAAJR,QAAI,IAAJA,GAAA,UAAAA,EAAMS,eAAN,eAAeC,UAAgB,qDADlC,OAEGV,QAFH,IAEGA,GAFH,UAEGA,EAAMS,eAFT,aAEG,EAAeE,KAAI,SAAAC,GAAM,OAAI,2BAC1B,qCAAaA,EAAOC,WACpB,uBAAKD,EAAOE,YAFuBF,EAAOG,GAApB,SAOrC,C,8LCzCKC,EAAO,mCAEAC,EAAc,mCAAG,6FACpBC,EAAS,CACXC,IAAK,kDACLC,OAAQ,CACJC,QAASL,IAJS,UAOHM,EAAAA,EAAAA,GAAMJ,GAPH,cAOpBX,EAPoB,yBAQnBA,EAASP,MARU,2CAAH,qDAWduB,EAAa,mCAAG,WAAOC,GAAP,8FAAaC,EAAb,+BAAoB,EACvCP,EAAS,CACXC,IAAK,4CACLC,OAAQ,CACJC,QAASL,EACTU,SAAU,QACVD,KAAMA,EACNE,MAAOH,IAPU,UAUFF,EAAAA,EAAAA,GAAMJ,GAVJ,cAUnBX,EAVmB,yBAWlBA,EAASP,MAXS,2CAAH,sDAcb4B,EAAS,mCAAG,WAAOC,GAAP,gFACfX,EAAS,CACXC,IAAI,sCAAD,OAAwCU,GAC3CT,OAAQ,CACJC,QAASL,EACTU,SAAU,UALG,UAQEJ,EAAAA,EAAAA,GAAMJ,GARR,cAQfX,EARe,yBASdA,EAASP,MATK,2CAAH,sDAYT8B,EAAY,mCAAG,WAAOD,GAAP,gFAClBX,EAAS,CACXC,IAAI,sCAAD,OAAwCU,EAAxC,YACHT,OAAQ,CACJC,QAASL,EACTU,SAAU,UALM,UAQDJ,EAAAA,EAAAA,GAAMJ,GARL,cAQlBX,EARkB,yBASjBA,EAASP,MATQ,2CAAH,sDAYZ+B,EAAY,mCAAG,WAAOF,GAAP,gFAClBX,EAAS,CACXC,IAAI,sCAAD,OAAwCU,EAAxC,YACHT,OAAQ,CACJC,QAASL,EACTU,SAAU,QACVD,KAAM,IANU,UASDH,EAAAA,EAAAA,GAAMJ,GATL,cASlBX,EATkB,yBAUjBA,EAASP,MAVQ,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/moviedbAPI.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as MovieAPI from '../../services/moviedbAPI';\n\nimport Loader from 'components/Loader/Loader';\n\nexport default function Reviews() {\n  const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n      if (!movieId) return;\n      const fetchReviews = async (movieId) => {\n      setIsLoading(true);\n      try {\n      const response = await MovieAPI.movieReviews(movieId);\n      setData(response);\n    } catch (e) {\n      setError(e);\n    } finally {\n        setIsLoading(false);\n    }\n    }\n    \n    fetchReviews(movieId);\n\n    }, [movieId]);\n\n  return (\n      <div>\n          {isLoading && <Loader />}\n        {error && <div>Error: {error.message}</div>}\n          <ul>\n            {data?.results?.length === 0 && <li>There are no reviews yet</li>}\n            {data?.results?.map(review => <li key={review.id}>\n                <h4>Author: {review.author}</h4>\n                <p>{ review.content }</p>\n            </li>)}\n        </ul>\n    </div>\n  )\n}\n","import axios from 'axios';\n\nconst API_KEY = `8dee51c91a52c88890f609d5b0af0b1a`;\n\nexport const trendingMovies = async () => {\n    const config = {\n        url: 'https://api.themoviedb.org/3/trending/movie/day',\n        params: {\n            api_key: API_KEY,\n        }\n}\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const moviesByQuery = async (name, page = 1) => {\n    const config = {\n        url: 'https://api.themoviedb.org/3/search/movie',\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: page,\n            query: name\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieById = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieCredits = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/credits`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieReviews = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/reviews`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: 1,\n        }\n    }\n    const response = await axios(config);\n    return response.data; \n};"],"names":["Reviews","useState","error","setError","isLoading","setIsLoading","data","setData","movieId","useParams","useEffect","fetchReviews","MovieAPI","response","message","results","length","map","review","author","content","id","API_KEY","trendingMovies","config","url","params","api_key","axios","moviesByQuery","name","page","language","query","movieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}