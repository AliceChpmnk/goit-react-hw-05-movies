{"version":3,"file":"static/js/352.f45a66a1.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/BackButton/BackButton.styled.jsx","components/BackButton/BackButton.jsx","pages/MoviePage.jsx","services/moviedbAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledMovieCard = styled.div`\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n`\n\nexport const ButtonsContainer = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const StyledNavLinkBtn = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: #BC4749;\n  }\n`;","import React from 'react';\nimport { StyledMovieCard } from './MovieCard.styled';\n\nexport default function MovieCard({data}) {\n    return (\n      <StyledMovieCard>\n            <div>\n                  <img src={`https://image.tmdb.org/t/p/w400${data.poster_path}`} alt={data.name ?? data.title} />\n              </div>\n              <div>\n                  <h1>{data.name ?? data.title}</h1>\n                  <p>User Score: { data.vote_average}</p>\n                  <h2>Overview</h2>\n                  <p>{ data.overview }</p>\n                  {data.genres?.length > 0 && <>\n                      <h2>Genres</h2>\n                      <p>{data.genres.map(genre => genre.name).join(', ')}</p>\n                  </>}\n            </div>\n        </StyledMovieCard>\n  )\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledBackButton = styled(Link)`\n    display: inline-block;\n    padding: 10px;\n    margin-bottom: 20px;\n    text-decoration: none;\n    border-radius: 5px;\n    background-color: #386641;\n    color: white;\n`","import React from 'react';\n\nimport { StyledBackButton } from './BackButton.styled';\n\nexport default function BackButton({ backLinkHref }) {\n  return (\n    <StyledBackButton to={backLinkHref}>◄ Go back</StyledBackButton>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport * as MovieAPI from '../services/moviedbAPI';\n\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { StyledNavLinkBtn, ButtonsContainer } from 'components/MovieCard/MovieCard.styled';\nimport BackButton from 'components/BackButton/BackButton';\n\nfunction MoviePage() {\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n        if (!movieId) return;\n    const fetchData = async (movieId) => {\n      setIsLoading(true);\n      try {\n      const response = await MovieAPI.movieById(movieId);\n      setData(response);\n    } catch (e) {\n      setError(e);\n    } finally {\n        setIsLoading(false);\n    }\n    }\n    \n    fetchData(movieId);\n\n    }, [movieId]);\n\n  return (\n      <>\n          <BackButton backLinkHref={backLinkHref}>◄ Go back</BackButton>\n          {isLoading && <Loader />}\n          {error && <div>Error: {error.message}</div>}\n          {data && <MovieCard data={data} />}\n          <ButtonsContainer>\n              <h3>Additional Information:</h3>\n              <StyledNavLinkBtn to=\"cast\" state={{from: backLinkHref}}>Cast</StyledNavLinkBtn>\n              <StyledNavLinkBtn to=\"reviews\" state={{from: backLinkHref}}>Reviews</StyledNavLinkBtn>\n          </ButtonsContainer>\n          <Outlet />\n    </>)\n}\n\nexport default MoviePage;","import axios from 'axios';\n\nconst API_KEY = `8dee51c91a52c88890f609d5b0af0b1a`;\n\nexport const trendingMovies = async () => {\n    const config = {\n        url: 'https://api.themoviedb.org/3/trending/movie/day',\n        params: {\n            api_key: API_KEY,\n        }\n}\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const moviesByQuery = async (name, page = 1) => {\n    const config = {\n        url: 'https://api.themoviedb.org/3/search/movie',\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: page,\n            query: name\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieById = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieCredits = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/credits`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieReviews = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/reviews`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: 1,\n        }\n    }\n    const response = await axios(config);\n    return response.data; \n};"],"names":["StyledMovieCard","styled","ButtonsContainer","StyledNavLinkBtn","NavLink","MovieCard","data","src","poster_path","alt","name","title","vote_average","overview","genres","length","map","genre","join","StyledBackButton","Link","BackButton","backLinkHref","to","useState","error","setError","isLoading","setIsLoading","setData","movieId","useParams","useLocation","state","from","useEffect","fetchData","MovieAPI","response","Loader","message","API_KEY","trendingMovies","config","url","params","api_key","axios","moviesByQuery","page","language","query","movieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}