{"version":3,"file":"static/js/478.697834f7.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Search/SearchForm.jsx","pages/Movies.jsx","services/moviedbAPI.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieItem = styled(NavLink)`\n  \n`;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledMovieItem } from './MovieItem.styled';\n\nexport default function MovieItem({ name, id }) {\n    const location = useLocation();\n    return (\n        <li>\n            <StyledMovieItem key={id} to={`/movies/${id}`} state={{from: location}}>{name}</StyledMovieItem>\n      </li>\n  )\n}\n\nMovieItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n}\n","import styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Loader from 'components/Loader/Loader';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport { StyledMovieList } from './MoviesList.styled';\n\nexport default function MoviesList({ movies = [], isLoading = false, error = '' }) {\n\n    return (\n        <>\n            <StyledMovieList>\n                {movies?.length > 0 && movies.map(item => <MovieItem key={item.id} id={item.id} name={item.name ?? item.title} />)}\n            </StyledMovieList>\n            {isLoading && <Loader />}\n            {error && <div>Error: {error.message}</div>}\n      </>\n  )\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.array,\n    isLoading: PropTypes.bool,\n    error: PropTypes.string,\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function SearchForm({ onSubmit }) {\n    const [query, setQuery] = useState('');\n\n    const handleQueryChange = e => {\n        setQuery(e.currentTarget.value.toLowerCase());\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        \n    if (query.trim() === '') {\n      alert('Please enter the name of the movie');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n    };\n\n  return (\n    <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"Search movies\" value={query} onChange={ handleQueryChange } />\n          <button type=\"submit\">Search</button>\n    </form>\n  )\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport * as MovieAPI from '../services/moviedbAPI';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/Search/SearchForm';\n\nfunction Movies() {\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        if (!query) return;\n    const fetchMovies = async (query) => {\n      setIsLoading(true);\n      try {\n      const response = await MovieAPI.moviesByQuery(query);\n      setMovies(response.results);\n    } catch (e) {\n      setError(e);\n    } finally {\n        setIsLoading(false);\n    }\n    }\n    \n    fetchMovies(query);\n    }, [query]);\n\n    const handleFormSubmit = (name) => {\n        setSearchParams({ query: name });\n    }\n\n  return (\n      <>\n          <SearchForm onSubmit={handleFormSubmit} />\n          {movies && <MoviesList error={error} isLoading={isLoading} movies={movies}/>}\n      </>\n  )\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = `8dee51c91a52c88890f609d5b0af0b1a`;\n\nexport const trendingMovies = async () => {\n    const config = {\n        url: 'https://api.themoviedb.org/3/trending/movie/day',\n        params: {\n            api_key: API_KEY,\n        }\n}\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const moviesByQuery = async (name, page = 1) => {\n    const config = {\n        url: 'https://api.themoviedb.org/3/search/movie',\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: page,\n            query: name\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieById = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieCredits = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/credits`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n    const response = await axios(config);\n    return response.data;\n};\n\nexport const movieReviews = async (movie_id) => {\n    const config = {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/reviews`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: 1,\n        }\n    }\n    const response = await axios(config);\n    return response.data; \n};"],"names":["StyledMovieItem","styled","NavLink","MovieItem","name","id","location","useLocation","to","state","from","StyledMovieList","MoviesList","movies","isLoading","error","length","map","item","title","Loader","message","SearchForm","onSubmit","useState","query","setQuery","e","preventDefault","trim","alert","type","placeholder","value","onChange","currentTarget","toLowerCase","setError","setIsLoading","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","MovieAPI","response","results","API_KEY","trendingMovies","config","url","params","api_key","axios","data","moviesByQuery","page","language","movieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}