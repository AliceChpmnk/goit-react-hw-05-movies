{"version":3,"file":"static/js/736.ec090d1d.chunk.js","mappings":"+OAEaA,E,OAAWC,GAAAA,GAAH,iE,kBCON,SAASC,IAAQ,IAAD,EAC3B,GAA8CC,EAAAA,EAAAA,KAAtCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,UACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QAQV,OANEE,EAAAA,EAAAA,YAAU,WACDF,GAELD,EAAUI,EAAAA,GAAqBH,GAClC,GAAE,CAACA,EAASD,KAGb,2BACOH,IAAa,SAACQ,EAAA,EAAD,IACbN,IAAS,qCAAaA,EAAMO,YAC7B,+BACKR,QADL,IACKA,GADL,UACKA,EAAMS,YADX,aACK,EAAYC,KAAI,SAAAC,GAAK,OAAI,UAAChB,EAAD,YACtB,wBAAKgB,EAAMC,QACX,gBAAKC,IAAKF,EAAMG,aAAN,yCAAuDH,EAAMG,cAAiBC,EAAeC,IAAKL,EAAMC,QAClH,uBAAKD,EAAMM,cAH0BN,EAAMO,GAAzB,QAQnC,C,gHC7BYpB,EAAW,WACtB,OAAkCqB,EAAAA,EAAAA,WAAS,GAA3C,eAAOpB,EAAP,KAAkBqB,EAAlB,KACA,GAAwBD,EAAAA,EAAAA,UAAS,MAAjC,eAAOnB,EAAP,KAAaqB,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOlB,EAAP,KAAcqB,EAAd,KAEMpB,GAAYqB,EAAAA,EAAAA,aAAW,mCAAC,WAAOC,GAAP,8EAC5BJ,GAAa,GADe,mBAGHK,EAAAA,EAAAA,GAAMD,GAHH,OAGpBE,EAHoB,OAI1BL,EAAQK,EAAS1B,MAJS,gDAM1BsB,EAAS,EAAD,IANkB,yBAQ1BF,GAAa,GARa,4EAAD,sDAU1B,IAEH,MAAO,CAAErB,UAAAA,EAAWC,KAAAA,EAAMC,MAAAA,EAAOC,UAAAA,EAClC,C,sJCrBD,IAAMyB,EAAO,mCAEAC,EAAiB,WAC1B,MAAO,CACHC,IAAK,kDACLC,OAAQ,CACJC,QAASJ,GAEnB,EAEWK,EAAgB,SAACpB,GAAkB,IAAZqB,EAAW,uDAAN,EACrC,MAAO,CACHJ,IAAK,4CACLC,OAAQ,CACJC,QAASJ,EACTO,SAAU,QACVD,KAAMA,EACNE,MAAOvB,GAGlB,EAEYwB,EAAY,SAACC,GACtB,MAAO,CACHR,IAAI,sCAAD,OAAwCQ,GAC3CP,OAAQ,CACJC,QAASJ,EACTO,SAAU,SAGrB,EAEYI,EAAe,SAACD,GACzB,MAAO,CACHR,IAAI,sCAAD,OAAwCQ,EAAxC,YACHP,OAAQ,CACJC,QAASJ,EACTO,SAAU,SAGrB,EAEYK,EAAe,SAACF,GACzB,MAAO,CACHR,IAAI,sCAAD,OAAwCQ,EAAxC,YACHP,OAAQ,CACJC,QAASJ,EACTO,SAAU,QACVD,KAAM,GAGjB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","hooks/useAxios.jsx","services/moviedbConfigs.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n    img {\n        width: 200px;\n    }\n`","import React, {useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAxios } from 'hooks/useAxios';\nimport * as Configs from '../../services/moviedbConfigs';\n\nimport Loader from 'components/Loader/Loader';\nimport { CastItem } from './Cast.styled';\nimport DefaultAvatar from '../../images/default-avatar.jpg';\n\nexport default function Cast() {\n    const { isLoading, data, error, fetchData } = useAxios();\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        if (!movieId) return;\n\n        fetchData(Configs.movieCredits(movieId));\n    }, [movieId, fetchData]);\n\n  return (\n    <div>\n          {isLoading && <Loader />}\n          {error && <div>Error: {error.message}</div>}\n          <ul>\n              {data?.cast?.map(actor => <CastItem key={actor.id}>\n                  <h4>{actor.name}</h4>\n                  <img src={actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : DefaultAvatar} alt={actor.name} />\n                  <p>{ actor.character }</p>\n              </CastItem>)}\n          </ul>\n    </div>\n  )\n}\n","import { useCallback, useState } from 'react';\nimport axios from 'axios';\n\nexport const useAxios = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n\n  const fetchData = useCallback(async (config) => {\n    setIsLoading(true);\n    try {\n      const response = await axios(config);\n      setData(response.data);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return { isLoading, data, error, fetchData };\n};","const API_KEY = `8dee51c91a52c88890f609d5b0af0b1a`;\n\nexport const trendingMovies = () => {\n    return {\n        url: 'https://api.themoviedb.org/3/trending/movie/day',\n        params: {\n            api_key: API_KEY,\n        }\n}};\n\nexport const moviesByQuery = (name, page=1) => {\n    return {\n        url: 'https://api.themoviedb.org/3/search/movie',\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: page,\n            query: name\n        }\n    }\n};\n\nexport const movieById = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n};\n\nexport const movieCredits = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/credits`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        }\n    }\n};\n\nexport const movieReviews = (movie_id) => {\n    return {\n        url: `https://api.themoviedb.org/3/movie/${movie_id}/reviews`,\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            page: 1,\n        }\n    }\n};"],"names":["CastItem","styled","Cast","useAxios","isLoading","data","error","fetchData","movieId","useParams","useEffect","Configs","Loader","message","cast","map","actor","name","src","profile_path","DefaultAvatar","alt","character","id","useState","setIsLoading","setData","setError","useCallback","config","axios","response","API_KEY","trendingMovies","url","params","api_key","moviesByQuery","page","language","query","movieById","movie_id","movieCredits","movieReviews"],"sourceRoot":""}